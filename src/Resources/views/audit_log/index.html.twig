{% extends '@Audit/layout.html.twig' %}

{% block title %}Audit Logs - Audit System{% endblock %}

{% block breadcrumb_items %}
    <li class="breadcrumb-item active">Audit Logs</li>
{% endblock %}

{% block page_title %}Audit Logs{% endblock %}

{% block page_actions %}
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <button type="button" class="btn btn-sm btn-outline-secondary" onclick="toggleFilters()">
                <i class="bi bi-funnel"></i> Filters
            </button>
            <button type="button" class="btn btn-sm btn-outline-secondary" onclick="exportLogs()">
                <i class="bi bi-download"></i> Export
            </button>
            <button type="button" class="btn btn-sm btn-outline-danger" onclick="bulkRollback()" id="bulkRollbackBtn" style="display: none;">
                <i class="bi bi-arrow-counterclockwise"></i> Bulk Rollback
            </button>
        </div>
    </div>
{% endblock %}

{% block content %}
<!-- Filters Panel -->
<div class="card mb-4" id="filtersPanel" style="display: {{ app.request.query.count > 0 ? 'block' : 'none' }};">
    <div class="card-header">
        <h6 class="card-title mb-0">
            <i class="bi bi-funnel"></i>
            Filters
        </h6>
    </div>
    <div class="card-body">
        <form method="GET" action="{{ path('audit_log_index') }}" id="filtersForm">
            <div class="row g-3">
                <!-- Entity Class Filter -->
                <div class="col-md-3">
                    <label for="entityClass" class="form-label">Entity Class</label>
                    <select class="form-select" name="entityClass" id="entityClass">
                        <option value="">All Entities</option>
                        {% for entity in available_entities %}
                            <option value="{{ entity }}" {{ app.request.query.get('entityClass') == entity ? 'selected' : '' }}>
                                {{ entity|split('\\')|last }}
                            </option>
                        {% endfor %}
                    </select>
                </div>
                
                <!-- Operation Filter -->
                <div class="col-md-2">
                    <label for="operation" class="form-label">Operation</label>
                    <select class="form-select" name="operation" id="operation">
                        <option value="">All Operations</option>
                        <option value="INSERT" {{ app.request.query.get('operation') == 'INSERT' ? 'selected' : '' }}>Insert</option>
                        <option value="UPDATE" {{ app.request.query.get('operation') == 'UPDATE' ? 'selected' : '' }}>Update</option>
                        <option value="DELETE" {{ app.request.query.get('operation') == 'DELETE' ? 'selected' : '' }}>Delete</option>
                    </select>
                </div>
                
                <!-- User Filter -->
                <div class="col-md-2">
                    <label for="userId" class="form-label">User ID</label>
                    <input type="text" class="form-control" name="userId" id="userId" 
                           value="{{ app.request.query.get('userId') }}" placeholder="User ID">
                </div>
                
                <!-- Date Range -->
                <div class="col-md-2">
                    <label for="dateFrom" class="form-label">Date From</label>
                    <input type="date" class="form-control" name="dateFrom" id="dateFrom" 
                           value="{{ app.request.query.get('dateFrom') }}">
                </div>
                
                <div class="col-md-2">
                    <label for="dateTo" class="form-label">Date To</label>
                    <input type="date" class="form-control" name="dateTo" id="dateTo" 
                           value="{{ app.request.query.get('dateTo') }}">
                </div>
                
                <!-- Actions -->
                <div class="col-md-1">
                    <label class="form-label">&nbsp;</label>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </div>
            </div>
            
            <!-- Advanced Filters -->
            <div class="row g-3 mt-2" id="advancedFilters" style="display: none;">
                <div class="col-md-3">
                    <label for="entityId" class="form-label">Entity ID</label>
                    <input type="text" class="form-control" name="entityId" id="entityId" 
                           value="{{ app.request.query.get('entityId') }}" placeholder="Entity ID">
                </div>
                
                <div class="col-md-3">
                    <label for="username" class="form-label">Username</label>
                    <input type="text" class="form-control" name="username" id="username" 
                           value="{{ app.request.query.get('username') }}" placeholder="Username">
                </div>
                
                <div class="col-md-3">
                    <label for="ipAddress" class="form-label">IP Address</label>
                    <input type="text" class="form-control" name="ipAddress" id="ipAddress" 
                           value="{{ app.request.query.get('ipAddress') }}" placeholder="IP Address">
                </div>
                
                <div class="col-md-3">
                    <label for="userAgent" class="form-label">User Agent</label>
                    <input type="text" class="form-control" name="userAgent" id="userAgent" 
                           value="{{ app.request.query.get('userAgent') }}" placeholder="User Agent">
                </div>
            </div>
            
            <div class="row mt-3">
                <div class="col-12">
                    <button type="button" class="btn btn-link btn-sm" onclick="toggleAdvancedFilters()">
                        <i class="bi bi-chevron-down" id="advancedToggleIcon"></i>
                        Advanced Filters
                    </button>
                    <a href="{{ path('audit_log_index') }}" class="btn btn-link btn-sm text-muted">
                        <i class="bi bi-x-circle"></i>
                        Clear Filters
                    </a>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Results Summary -->
<div class="d-flex justify-content-between align-items-center mb-3">
    <div>
        <span class="text-muted">
            Showing {{ logs.count }} of {{ logs.totalItemCount|number_format }} audit logs
            {% if app.request.query.count > 0 %}
                <span class="badge bg-primary ms-2">Filtered</span>
            {% endif %}
        </span>
    </div>
    <div>
        <div class="btn-group btn-group-sm">
            <input type="checkbox" class="btn-check" id="selectAll" autocomplete="off">
            <label class="btn btn-outline-secondary" for="selectAll">
                <i class="bi bi-check-all"></i> Select All
            </label>
        </div>
    </div>
</div>

<!-- Audit Logs Table -->
<div class="card">
    <div class="card-body p-0">
        {% if logs.count == 0 %}
            <div class="text-center py-5">
                <i class="bi bi-inbox" style="font-size: 4rem; opacity: 0.3;"></i>
                <h5 class="mt-3 text-muted">No audit logs found</h5>
                <p class="text-muted">Try adjusting your filters or check back later.</p>
                {% if app.request.query.count > 0 %}
                    <a href="{{ path('audit_log_index') }}" class="btn btn-outline-primary">
                        <i class="bi bi-arrow-left"></i> Clear Filters
                    </a>
                {% endif %}
            </div>
        {% else %}
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th width="40">
                                <input type="checkbox" id="selectAllTable" onchange="toggleAllRows(this)">
                            </th>
                            <th>
                                <a href="{{ path('audit_log_index', app.request.query.all|merge({sort: 'id', direction: app.request.query.get('sort') == 'id' and app.request.query.get('direction') == 'asc' ? 'desc' : 'asc'})) }}" 
                                   class="text-decoration-none text-dark">
                                    ID
                                    {% if app.request.query.get('sort') == 'id' %}
                                        <i class="bi bi-chevron-{{ app.request.query.get('direction') == 'asc' ? 'up' : 'down' }}"></i>
                                    {% endif %}
                                </a>
                            </th>
                            <th>Entity</th>
                            <th>
                                <a href="{{ path('audit_log_index', app.request.query.all|merge({sort: 'operation', direction: app.request.query.get('sort') == 'operation' and app.request.query.get('direction') == 'asc' ? 'desc' : 'asc'})) }}" 
                                   class="text-decoration-none text-dark">
                                    Operation
                                    {% if app.request.query.get('sort') == 'operation' %}
                                        <i class="bi bi-chevron-{{ app.request.query.get('direction') == 'asc' ? 'up' : 'down' }}"></i>
                                    {% endif %}
                                </a>
                            </th>
                            <th>User</th>
                            <th>
                                <a href="{{ path('audit_log_index', app.request.query.all|merge({sort: 'createdAt', direction: app.request.query.get('sort') == 'createdAt' and app.request.query.get('direction') == 'asc' ? 'desc' : 'asc'})) }}" 
                                   class="text-decoration-none text-dark">
                                    Date
                                    {% if app.request.query.get('sort') == 'createdAt' %}
                                        <i class="bi bi-chevron-{{ app.request.query.get('direction') == 'asc' ? 'up' : 'down' }}"></i>
                                    {% endif %}
                                </a>
                            </th>
                            <th>Changes</th>
                            <th width="120">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for log in logs %}
                        <tr data-log-id="{{ log.id }}">
                            <td>
                                <input type="checkbox" class="row-checkbox" value="{{ log.id }}" onchange="updateBulkActions()">
                            </td>
                            <td>
                                <span class="fw-bold">#{{ log.id }}</span>
                            </td>
                            <td>
                                <div class="fw-bold">{{ log.entityClass|split('\\')|last }}</div>
                                <small class="text-muted">ID: {{ log.entityId }}</small>
                            </td>
                            <td>
                                <span class="badge bg-{{ log.operation == 'INSERT' ? 'success' : (log.operation == 'UPDATE' ? 'warning' : 'danger') }}">
                                    <i class="bi bi-{{ log.operation == 'INSERT' ? 'plus' : (log.operation == 'UPDATE' ? 'pencil' : 'trash') }}"></i>
                                    {{ log.operation }}
                                </span>
                            </td>
                            <td>
                                <div class="fw-bold">{{ log.username ?: 'System' }}</div>
                                {% if log.userId %}
                                    <small class="text-muted">ID: {{ log.userId }}</small>
                                {% endif %}
                                {% if log.ipAddress %}
                                    <br><small class="text-muted">{{ log.ipAddress }}</small>
                                {% endif %}
                            </td>
                            <td>
                                <span data-bs-toggle="tooltip" title="{{ log.createdAt|date('Y-m-d H:i:s') }}">
                                    {{ log.createdAt|date('M j, H:i') }}
                                </span>
                            </td>
                            <td>
                                {% if log.changes is not empty %}
                                    <span class="badge bg-info">{{ log.changes|length }} field{{ log.changes|length != 1 ? 's' : '' }}</span>
                                    {% for change in log.changes|slice(0, 2) %}
                                        <br><small class="text-muted">{{ change.fieldName }}</small>
                                    {% endfor %}
                                    {% if log.changes|length > 2 %}
                                        <br><small class="text-muted">+{{ log.changes|length - 2 }} more</small>
                                    {% endif %}
                                {% else %}
                                    <span class="text-muted">No changes</span>
                                {% endif %}
                            </td>
                            <td>
                                <div class="btn-group btn-group-sm">
                                    <a href="{{ path('audit_log_show', {id: log.id}) }}" 
                                       class="btn btn-outline-primary btn-sm"
                                       data-bs-toggle="tooltip" title="View Details">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    {% if log.operation != 'INSERT' %}
                                        <a href="{{ path('audit_rollback_preview', {id: log.id}) }}" 
                                           class="btn btn-outline-warning btn-sm"
                                           data-bs-toggle="tooltip" title="Preview Rollback">
                                            <i class="bi bi-arrow-counterclockwise"></i>
                                        </a>
                                    {% endif %}
                                    <button type="button" class="btn btn-outline-danger btn-sm" 
                                            onclick="deleteLog({{ log.id }})"
                                            data-bs-toggle="tooltip" title="Delete Log">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        {% endif %}
    </div>
</div>

<!-- Pagination -->
{% if logs.pageCount > 1 %}
    <nav aria-label="Audit logs pagination" class="mt-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <span class="text-muted">
                    Page {{ logs.currentPageNumber }} of {{ logs.pageCount }}
                </span>
            </div>
            <div>
                {{ knp_pagination_render(logs, '@Audit/pagination.html.twig') }}
            </div>
        </div>
    </nav>
{% endif %}

<!-- Export Modal -->
<div class="modal fade" id="exportModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-download"></i>
                    Export Audit Logs
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="exportForm">
                    <div class="mb-3">
                        <label for="exportFormat" class="form-label">Export Format</label>
                        <select class="form-select" id="exportFormat" name="format">
                            <option value="csv">CSV</option>
                            <option value="json">JSON</option>
                            <option value="xml">XML</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="exportFiltered" name="filtered" checked>
                            <label class="form-check-label" for="exportFiltered">
                                Export only filtered results
                            </label>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="exportChanges" name="includeChanges" checked>
                            <label class="form-check-label" for="exportChanges">
                                Include field changes
                            </label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="performExport()">
                    <i class="bi bi-download"></i> Export
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Bulk Rollback Modal -->
<div class="modal fade" id="bulkRollbackModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-arrow-counterclockwise"></i>
                    Bulk Rollback
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle"></i>
                    <strong>Warning:</strong> This will rollback multiple audit logs. This action cannot be undone.
                </div>
                <div id="bulkRollbackPreview">
                    <!-- Preview content will be loaded here -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="executeBulkRollback()">
                    <i class="bi bi-arrow-counterclockwise"></i> Execute Rollback
                </button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
// Filter management
function toggleFilters() {
    const panel = document.getElementById('filtersPanel');
    panel.style.display = panel.style.display === 'none' ? 'block' : 'none';
}

function toggleAdvancedFilters() {
    const advanced = document.getElementById('advancedFilters');
    const icon = document.getElementById('advancedToggleIcon');
    
    if (advanced.style.display === 'none') {
        advanced.style.display = 'block';
        icon.className = 'bi bi-chevron-up';
    } else {
        advanced.style.display = 'none';
        icon.className = 'bi bi-chevron-down';
    }
}

// Row selection
function toggleAllRows(checkbox) {
    const checkboxes = document.querySelectorAll('.row-checkbox');
    checkboxes.forEach(cb => cb.checked = checkbox.checked);
    updateBulkActions();
}

function updateBulkActions() {
    const selected = document.querySelectorAll('.row-checkbox:checked');
    const bulkBtn = document.getElementById('bulkRollbackBtn');
    
    if (selected.length > 0) {
        bulkBtn.style.display = 'inline-block';
    } else {
        bulkBtn.style.display = 'none';
    }
}

// Export functionality
function exportLogs() {
    const modal = new bootstrap.Modal(document.getElementById('exportModal'));
    modal.show();
}

function performExport() {
    const form = document.getElementById('exportForm');
    const formData = new FormData(form);
    
    // Add current filters if exporting filtered results
    if (formData.get('filtered')) {
        const currentParams = new URLSearchParams(window.location.search);
        for (const [key, value] of currentParams) {
            formData.append(key, value);
        }
    }
    
    // Create download URL
    const params = new URLSearchParams(formData);
    const url = '{{ path("audit_log_export") }}?' + params.toString();
    
    // Trigger download
    window.location.href = url;
    
    // Close modal
    bootstrap.Modal.getInstance(document.getElementById('exportModal')).hide();
}

// Bulk rollback
function bulkRollback() {
    const selected = Array.from(document.querySelectorAll('.row-checkbox:checked')).map(cb => cb.value);
    
    if (selected.length === 0) {
        AuditSystem.toast('Please select at least one audit log', 'warning');
        return;
    }
    
    // Load preview
    AuditSystem.showLoading();
    
    fetch('{{ path("audit_rollback_bulk_preview") }}', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest'
        },
        body: JSON.stringify({ids: selected})
    })
    .then(response => response.json())
    .then(data => {
        AuditSystem.hideLoading();
        
        if (data.success) {
            document.getElementById('bulkRollbackPreview').innerHTML = data.preview;
            const modal = new bootstrap.Modal(document.getElementById('bulkRollbackModal'));
            modal.show();
        } else {
            AuditSystem.toast(data.message || 'Failed to load rollback preview', 'error');
        }
    })
    .catch(error => {
        AuditSystem.hideLoading();
        AuditSystem.toast('Failed to load rollback preview', 'error');
    });
}

function executeBulkRollback() {
    const selected = Array.from(document.querySelectorAll('.row-checkbox:checked')).map(cb => cb.value);
    
    AuditSystem.showLoading();
    
    fetch('{{ path("audit_rollback_bulk_execute") }}', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest',
            'X-CSRF-Token': '{{ csrf_token("rollback") }}'
        },
        body: JSON.stringify({ids: selected})
    })
    .then(response => response.json())
    .then(data => {
        AuditSystem.hideLoading();
        
        if (data.success) {
            AuditSystem.toast('Bulk rollback completed successfully', 'success');
            bootstrap.Modal.getInstance(document.getElementById('bulkRollbackModal')).hide();
            location.reload();
        } else {
            AuditSystem.toast(data.message || 'Bulk rollback failed', 'error');
        }
    })
    .catch(error => {
        AuditSystem.hideLoading();
        AuditSystem.toast('Bulk rollback failed', 'error');
    });
}

// Delete log
function deleteLog(logId) {
    AuditSystem.confirm('Are you sure you want to delete this audit log? This action cannot be undone.', function() {
        AuditSystem.showLoading();
        
        fetch(`{{ path('audit_log_delete', {id: '__ID__'}) }}`.replace('__ID__', logId), {
            method: 'DELETE',
            headers: {
                'X-Requested-With': 'XMLHttpRequest',
                'X-CSRF-Token': '{{ csrf_token("delete_log") }}'
            }
        })
        .then(response => response.json())
        .then(data => {
            AuditSystem.hideLoading();
            
            if (data.success) {
                AuditSystem.toast('Audit log deleted successfully', 'success');
                document.querySelector(`tr[data-log-id="${logId}"]`).remove();
            } else {
                AuditSystem.toast(data.message || 'Failed to delete audit log', 'error');
            }
        })
        .catch(error => {
            AuditSystem.hideLoading();
            AuditSystem.toast('Failed to delete audit log', 'error');
        });
    });
}

// Auto-submit filters on change
document.getElementById('entityClass').addEventListener('change', function() {
    document.getElementById('filtersForm').submit();
});

document.getElementById('operation').addEventListener('change', function() {
    document.getElementById('filtersForm').submit();
});
</script>
{% endblock %}