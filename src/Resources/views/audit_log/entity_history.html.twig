{% extends '@Audit/layout.html.twig' %}

{% block title %}{{ entityClass|split('\\')|last }} #{{ entityId }} History - Audit System{% endblock %}

{% block breadcrumb_items %}
    <li class="breadcrumb-item"><a href="{{ path('audit_log_index') }}">Audit Logs</a></li>
    <li class="breadcrumb-item active">Entity History</li>
{% endblock %}

{% block page_title %}
    {{ entityClass|split('\\')|last }} #{{ entityId }} History
    <small class="text-muted">{{ entityClass }}</small>
{% endblock %}

{% block page_actions %}
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <a href="{{ path('audit_log_index') }}" class="btn btn-sm btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Back to Logs
            </a>
            <button type="button" class="btn btn-sm btn-outline-primary" onclick="refreshHistory()">
                <i class="bi bi-arrow-clockwise"></i> Refresh
            </button>
        </div>
        <div class="btn-group me-2">
            <button type="button" class="btn btn-sm btn-outline-warning" onclick="rollbackToDate()" {{ logs is empty ? 'disabled' : '' }}>
                <i class="bi bi-arrow-counterclockwise"></i> Rollback to Date
            </button>
            <button type="button" class="btn btn-sm btn-outline-info" onclick="compareVersions()" {{ logs|length < 2 ? 'disabled' : '' }}>
                <i class="bi bi-arrow-left-right"></i> Compare Versions
            </button>
        </div>
        <div class="btn-group">
            <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                <i class="bi bi-download"></i> Export
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="{{ path('audit_log_export', {entityClass: entityClass, entityId: entityId, format: 'json'}) }}">
                    <i class="bi bi-filetype-json"></i> Export as JSON
                </a></li>
                <li><a class="dropdown-item" href="{{ path('audit_log_export', {entityClass: entityClass, entityId: entityId, format: 'csv'}) }}">
                    <i class="bi bi-filetype-csv"></i> Export as CSV
                </a></li>
                <li><a class="dropdown-item" href="{{ path('audit_log_export', {entityClass: entityClass, entityId: entityId, format: 'xml'}) }}">
                    <i class="bi bi-filetype-xml"></i> Export as XML
                </a></li>
            </ul>
        </div>
    </div>
{% endblock %}

{% block content %}
<!-- Entity Summary -->
<div class="row mb-4">
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-info-circle"></i>
                    Entity Information
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4">Entity Class:</dt>
                            <dd class="col-sm-8">
                                <div class="fw-bold">{{ entityClass|split('\\')|last }}</div>
                                <small class="text-muted">{{ entityClass }}</small>
                            </dd>
                            
                            <dt class="col-sm-4">Entity ID:</dt>
                            <dd class="col-sm-8">
                                <span class="badge bg-secondary fs-6">{{ entityId }}</span>
                            </dd>
                            
                            <dt class="col-sm-4">Total Changes:</dt>
                            <dd class="col-sm-8">
                                <span class="badge bg-info fs-6">{{ logs|length }} log{{ logs|length != 1 ? 's' : '' }}</span>
                            </dd>
                        </dl>
                    </div>
                    
                    <div class="col-md-6">
                        <dl class="row">
                            {% if logs is not empty %}
                                <dt class="col-sm-4">First Change:</dt>
                                <dd class="col-sm-8">
                                    <div class="fw-bold">{{ logs|last.createdAt|date('Y-m-d H:i:s') }}</div>
                                    <small class="text-muted">{{ logs|last.createdAt|date('l, F j, Y') }}</small>
                                </dd>
                                
                                <dt class="col-sm-4">Last Change:</dt>
                                <dd class="col-sm-8">
                                    <div class="fw-bold">{{ logs|first.createdAt|date('Y-m-d H:i:s') }}</div>
                                    <small class="text-muted">{{ logs|first.createdAt|date('l, F j, Y') }}</small>
                                </dd>
                                
                                <dt class="col-sm-4">Status:</dt>
                                <dd class="col-sm-8">
                                    {% if logs|first.operation == 'DELETE' %}
                                        <span class="badge bg-danger">Deleted</span>
                                    {% else %}
                                        <span class="badge bg-success">Active</span>
                                    {% endif %}
                                </dd>
                            {% endif %}
                        </dl>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Statistics -->
    <div class="col-lg-4">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-bar-chart"></i>
                    Statistics
                </h5>
            </div>
            <div class="card-body">
                {% set operations = {} %}
                {% for log in logs %}
                    {% set operations = operations|merge({(log.operation): (operations[log.operation] ?? 0) + 1}) %}
                {% endfor %}
                
                <div class="row text-center">
                    {% for operation, count in operations %}
                        <div class="col-4">
                            <div class="border rounded p-2">
                                <div class="fw-bold text-{{ operation == 'INSERT' ? 'success' : (operation == 'UPDATE' ? 'warning' : 'danger') }}">
                                    {{ count }}
                                </div>
                                <small class="text-muted">{{ operation|lower|title }}</small>
                            </div>
                        </div>
                    {% endfor %}
                </div>
                
                {% if logs is not empty %}
                    <hr>
                    <div class="row text-center">
                        {% set totalChanges = 0 %}
                        {% for log in logs %}
                            {% set totalChanges = totalChanges + log.changes|length %}
                        {% endfor %}
                        
                        <div class="col-6">
                            <div class="fw-bold text-info">{{ totalChanges }}</div>
                            <small class="text-muted">Field Changes</small>
                        </div>
                        
                        {% set uniqueUsers = [] %}
                        {% for log in logs %}
                            {% if log.userId and log.userId not in uniqueUsers %}
                                {% set uniqueUsers = uniqueUsers|merge([log.userId]) %}
                            {% endif %}
                        {% endfor %}
                        
                        <div class="col-6">
                            <div class="fw-bold text-primary">{{ uniqueUsers|length }}</div>
                            <small class="text-muted">Unique Users</small>
                        </div>
                    </div>
                {% endif %}
            </div>
        </div>
    </div>
</div>

<!-- Timeline Filters -->
<div class="card mb-4">
    <div class="card-header">
        <div class="row align-items-center">
            <div class="col">
                <h5 class="card-title mb-0">
                    <i class="bi bi-funnel"></i>
                    Timeline Filters
                </h5>
            </div>
            <div class="col-auto">
                <button type="button" class="btn btn-sm btn-outline-secondary" onclick="resetFilters()">
                    <i class="bi bi-arrow-clockwise"></i> Reset
                </button>
            </div>
        </div>
    </div>
    <div class="card-body">
        <form id="filterForm" class="row g-3">
            <div class="col-md-3">
                <label for="operationFilter" class="form-label">Operation</label>
                <select class="form-select" id="operationFilter" name="operation">
                    <option value="">All Operations</option>
                    <option value="INSERT" {{ app.request.query.get('operation') == 'INSERT' ? 'selected' : '' }}>Insert</option>
                    <option value="UPDATE" {{ app.request.query.get('operation') == 'UPDATE' ? 'selected' : '' }}>Update</option>
                    <option value="DELETE" {{ app.request.query.get('operation') == 'DELETE' ? 'selected' : '' }}>Delete</option>
                </select>
            </div>
            
            <div class="col-md-3">
                <label for="userFilter" class="form-label">User</label>
                <select class="form-select" id="userFilter" name="userId">
                    <option value="">All Users</option>
                    {% for log in logs %}
                        {% if log.userId %}
                            <option value="{{ log.userId }}" {{ app.request.query.get('userId') == log.userId ? 'selected' : '' }}>
                                {{ log.username ?: ('User #' ~ log.userId) }}
                            </option>
                        {% endif %}
                    {% endfor %}
                </select>
            </div>
            
            <div class="col-md-2">
                <label for="dateFrom" class="form-label">From Date</label>
                <input type="date" class="form-control" id="dateFrom" name="dateFrom" 
                       value="{{ app.request.query.get('dateFrom') }}">
            </div>
            
            <div class="col-md-2">
                <label for="dateTo" class="form-label">To Date</label>
                <input type="date" class="form-control" id="dateTo" name="dateTo" 
                       value="{{ app.request.query.get('dateTo') }}">
            </div>
            
            <div class="col-md-2">
                <label class="form-label">&nbsp;</label>
                <div class="d-grid">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-search"></i> Filter
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Timeline -->
{% if logs is not empty %}
    <div class="card">
        <div class="card-header">
            <div class="row align-items-center">
                <div class="col">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-clock-history"></i>
                        Change Timeline ({{ logs|length }} entries)
                    </h5>
                </div>
                <div class="col-auto">
                    <div class="btn-group btn-group-sm">
                        <input type="checkbox" class="btn-check" id="selectAll" autocomplete="off">
                        <label class="btn btn-outline-primary" for="selectAll">
                            <i class="bi bi-check-all"></i> Select All
                        </label>
                        
                        <button type="button" class="btn btn-outline-warning" onclick="rollbackSelected()" disabled id="rollbackBtn">
                            <i class="bi bi-arrow-counterclockwise"></i> Rollback Selected
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="timeline-container">
                {% for log in logs %}
                    <div class="timeline-item" data-log-id="{{ log.id }}">
                        <div class="timeline-marker bg-{{ log.operation == 'INSERT' ? 'success' : (log.operation == 'UPDATE' ? 'warning' : 'danger') }}">
                            <i class="bi bi-{{ log.operation == 'INSERT' ? 'plus' : (log.operation == 'UPDATE' ? 'pencil' : 'trash') }}"></i>
                        </div>
                        
                        <div class="timeline-content">
                            <div class="timeline-header">
                                <div class="row align-items-center">
                                    <div class="col">
                                        <div class="d-flex align-items-center">
                                            <input type="checkbox" class="form-check-input me-2 log-checkbox" 
                                                   value="{{ log.id }}" {{ log.operation == 'INSERT' ? 'disabled' : '' }}>
                                            
                                            <span class="badge bg-{{ log.operation == 'INSERT' ? 'success' : (log.operation == 'UPDATE' ? 'warning' : 'danger') }} me-2">
                                                {{ log.operation }}
                                            </span>
                                            
                                            <strong>{{ log.username ?: 'System' }}</strong>
                                            
                                            <span class="text-muted ms-2">
                                                {{ log.createdAt|date('Y-m-d H:i:s') }}
                                            </span>
                                        </div>
                                    </div>
                                    
                                    <div class="col-auto">
                                        <div class="btn-group btn-group-sm">
                                            <a href="{{ path('audit_log_show', {id: log.id}) }}" 
                                               class="btn btn-outline-primary btn-sm"
                                               data-bs-toggle="tooltip" title="View Details">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            
                                            {% if log.operation != 'INSERT' %}
                                                <a href="{{ path('audit_rollback_preview', {id: log.id}) }}" 
                                                   class="btn btn-outline-warning btn-sm"
                                                   data-bs-toggle="tooltip" title="Preview Rollback">
                                                    <i class="bi bi-arrow-counterclockwise"></i>
                                                </a>
                                            {% endif %}
                                            
                                            {% if not loop.last %}
                                                <button type="button" class="btn btn-outline-info btn-sm" 
                                                        onclick="compareLogs({{ log.id }}, {{ logs[loop.index].id }})"
                                                        data-bs-toggle="tooltip" title="Compare with Next">
                                                    <i class="bi bi-arrow-left-right"></i>
                                                </button>
                                            {% endif %}
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            {% if log.changes is not empty %}
                                <div class="timeline-changes mt-2">
                                    <div class="row">
                                        {% for change in log.changes|slice(0, 6) %}
                                            <div class="col-md-6 mb-1">
                                                <small class="text-muted">
                                                    <strong>{{ change.fieldName }}:</strong>
                                                    {% if change.oldValue is null and change.newValue is not null %}
                                                        <span class="text-success">Added</span>
                                                    {% elseif change.oldValue is not null and change.newValue is null %}
                                                        <span class="text-danger">Removed</span>
                                                    {% else %}
                                                        <span class="text-warning">Modified</span>
                                                    {% endif %}
                                                </small>
                                            </div>
                                        {% endfor %}
                                        
                                        {% if log.changes|length > 6 %}
                                            <div class="col-12">
                                                <small class="text-muted fst-italic">
                                                    ... and {{ log.changes|length - 6 }} more changes
                                                </small>
                                            </div>
                                        {% endif %}
                                    </div>
                                </div>
                            {% endif %}
                            
                            {% if log.metadata is not empty %}
                                <div class="timeline-metadata mt-2">
                                    <small class="text-muted">
                                        <i class="bi bi-tags"></i>
                                        {% for key, value in log.metadata|slice(0, 3) %}
                                            <span class="badge bg-light text-dark me-1">{{ key }}: {{ value }}</span>
                                        {% endfor %}
                                        {% if log.metadata|length > 3 %}
                                            <span class="fst-italic">+{{ log.metadata|length - 3 }} more</span>
                                        {% endif %}
                                    </small>
                                </div>
                            {% endif %}
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>
{% else %}
    <div class="card">
        <div class="card-body text-center py-5">
            <i class="bi bi-clock-history" style="font-size: 4rem; opacity: 0.3;"></i>
            <h4 class="mt-3 text-muted">No History Found</h4>
            <p class="text-muted">This entity has no audit history or the logs may have been filtered out.</p>
            
            {% if app.request.query.count > 0 %}
                <button type="button" class="btn btn-outline-primary" onclick="resetFilters()">
                    <i class="bi bi-arrow-clockwise"></i> Clear Filters
                </button>
            {% endif %}
        </div>
    </div>
{% endif %}
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
// Filter form handling
document.getElementById('filterForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const params = new URLSearchParams();
    
    for (let [key, value] of formData.entries()) {
        if (value) {
            params.append(key, value);
        }
    }
    
    const url = new URL(window.location);
    url.search = params.toString();
    window.location.href = url.toString();
});

// Reset filters
function resetFilters() {
    const url = new URL(window.location);
    url.search = '';
    window.location.href = url.toString();
}

// Refresh history
function refreshHistory() {
    window.location.reload();
}

// Select all checkboxes
document.getElementById('selectAll').addEventListener('change', function() {
    const checkboxes = document.querySelectorAll('.log-checkbox:not(:disabled)');
    checkboxes.forEach(cb => cb.checked = this.checked);
    updateRollbackButton();
});

// Individual checkbox handling
document.querySelectorAll('.log-checkbox').forEach(checkbox => {
    checkbox.addEventListener('change', updateRollbackButton);
});

// Update rollback button state
function updateRollbackButton() {
    const checkedBoxes = document.querySelectorAll('.log-checkbox:checked');
    const rollbackBtn = document.getElementById('rollbackBtn');
    
    rollbackBtn.disabled = checkedBoxes.length === 0;
    rollbackBtn.textContent = checkedBoxes.length > 0 
        ? `Rollback Selected (${checkedBoxes.length})` 
        : 'Rollback Selected';
}

// Rollback selected logs
function rollbackSelected() {
    const checkedBoxes = document.querySelectorAll('.log-checkbox:checked');
    const logIds = Array.from(checkedBoxes).map(cb => cb.value);
    
    if (logIds.length === 0) {
        AuditSystem.toast('Please select logs to rollback', 'warning');
        return;
    }
    
    const url = '{{ path("audit_rollback_bulk") }}';
    const form = document.createElement('form');
    form.method = 'POST';
    form.action = url;
    
    logIds.forEach(id => {
        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'logIds[]';
        input.value = id;
        form.appendChild(input);
    });
    
    const csrfInput = document.createElement('input');
    csrfInput.type = 'hidden';
    csrfInput.name = '_token';
    csrfInput.value = '{{ csrf_token("rollback_bulk") }}';
    form.appendChild(csrfInput);
    
    document.body.appendChild(form);
    form.submit();
}

// Rollback to specific date
function rollbackToDate() {
    const entityClass = '{{ entityClass|e('js') }}';
    const entityId = '{{ entityId|e('js') }}';
    
    const modal = document.createElement('div');
    modal.className = 'modal fade';
    modal.innerHTML = `
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Rollback to Date</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="rollbackDateForm">
                        <div class="mb-3">
                            <label for="rollbackDate" class="form-label">Select Date and Time</label>
                            <input type="datetime-local" class="form-control" id="rollbackDate" required>
                            <div class="form-text">Entity will be restored to its state at this date and time.</div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-warning" onclick="executeRollbackToDate()">Preview Rollback</button>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    const bsModal = new bootstrap.Modal(modal);
    bsModal.show();
    
    modal.addEventListener('hidden.bs.modal', () => {
        document.body.removeChild(modal);
    });
}

// Execute rollback to date
function executeRollbackToDate() {
    const date = document.getElementById('rollbackDate').value;
    if (!date) {
        AuditSystem.toast('Please select a date and time', 'warning');
        return;
    }
    
    const url = '{{ path("audit_rollback_entity_to_date", {entityClass: "__CLASS__", entityId: "__ID__"}) }}'
        .replace('__CLASS__', encodeURIComponent('{{ entityClass|e('js') }}'))
        .replace('__ID__', '{{ entityId|e('js') }}');
    
    const form = document.createElement('form');
    form.method = 'POST';
    form.action = url;
    
    const dateInput = document.createElement('input');
    dateInput.type = 'hidden';
    dateInput.name = 'date';
    dateInput.value = date;
    form.appendChild(dateInput);
    
    const csrfInput = document.createElement('input');
    csrfInput.type = 'hidden';
    csrfInput.name = '_token';
    csrfInput.value = '{{ csrf_token("rollback_entity") }}';
    form.appendChild(csrfInput);
    
    document.body.appendChild(form);
    form.submit();
}

// Compare logs
function compareLogs(logId1, logId2) {
    const url = '{{ path("audit_log_compare", {id1: "__ID1__", id2: "__ID2__"}) }}'
        .replace('__ID1__', logId1)
        .replace('__ID2__', logId2);
    
    window.open(url, '_blank');
}

// Compare versions modal
function compareVersions() {
    const modal = document.createElement('div');
    modal.className = 'modal fade';
    modal.innerHTML = `
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Compare Versions</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="compareForm">
                        <div class="row">
                            <div class="col-md-6">
                                <label for="version1" class="form-label">First Version</label>
                                <select class="form-select" id="version1" required>
                                    <option value="">Select version...</option>
                                    {% for log in logs %}
                                        <option value="{{ log.id }}">
                                            {{ log.operation }} - {{ log.createdAt|date('Y-m-d H:i:s') }} ({{ log.username ?: 'System' }})
                                        </option>
                                    {% endfor %}
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="version2" class="form-label">Second Version</label>
                                <select class="form-select" id="version2" required>
                                    <option value="">Select version...</option>
                                    {% for log in logs %}
                                        <option value="{{ log.id }}">
                                            {{ log.operation }} - {{ log.createdAt|date('Y-m-d H:i:s') }} ({{ log.username ?: 'System' }})
                                        </option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="executeCompare()">Compare</button>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    const bsModal = new bootstrap.Modal(modal);
    bsModal.show();
    
    modal.addEventListener('hidden.bs.modal', () => {
        document.body.removeChild(modal);
    });
}

// Execute comparison
function executeCompare() {
    const version1 = document.getElementById('version1').value;
    const version2 = document.getElementById('version2').value;
    
    if (!version1 || !version2) {
        AuditSystem.toast('Please select both versions to compare', 'warning');
        return;
    }
    
    if (version1 === version2) {
        AuditSystem.toast('Please select different versions to compare', 'warning');
        return;
    }
    
    compareLogs(version1, version2);
    bootstrap.Modal.getInstance(document.querySelector('.modal')).hide();
}
</script>
{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
.timeline-container {
    position: relative;
    padding: 20px 0;
}

.timeline-item {
    position: relative;
    padding-left: 60px;
    margin-bottom: 30px;
}

.timeline-item:not(:last-child)::before {
    content: '';
    position: absolute;
    left: 19px;
    top: 40px;
    bottom: -30px;
    width: 2px;
    background: #dee2e6;
}

.timeline-marker {
    position: absolute;
    left: 0;
    top: 0;
    width: 38px;
    height: 38px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 14px;
    border: 3px solid white;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.timeline-content {
    background: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    padding: 15px;
    position: relative;
}

.timeline-content::before {
    content: '';
    position: absolute;
    left: -8px;
    top: 15px;
    width: 0;
    height: 0;
    border-top: 8px solid transparent;
    border-bottom: 8px solid transparent;
    border-right: 8px solid #dee2e6;
}

.timeline-content::after {
    content: '';
    position: absolute;
    left: -7px;
    top: 15px;
    width: 0;
    height: 0;
    border-top: 8px solid transparent;
    border-bottom: 8px solid transparent;
    border-right: 8px solid #f8f9fa;
}

.timeline-header {
    margin-bottom: 10px;
}

.timeline-changes {
    background: white;
    border-radius: 4px;
    padding: 10px;
    border: 1px solid #e9ecef;
}

.timeline-metadata {
    border-top: 1px solid #e9ecef;
    padding-top: 10px;
}

.log-checkbox {
    transform: scale(1.1);
}

.log-checkbox:disabled {
    opacity: 0.3;
}
</style>
{% endblock %}